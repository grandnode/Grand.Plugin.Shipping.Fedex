@{
    Layout = "";
}
@model Grand.Plugin.Shipping.Fedex.Models.FedexShippingModel
@using Grand.Web.Framework;
@using Grand.Plugin.Shipping.Fedex;
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <script type="text/javascript">
    $(document).ready(function () {

        $("#PackingType").change(togglePackingType);

        togglePackingType();
    });

    function togglePackingType() {
        var selectedPackingTypeId = $("#PackingType").val();
        if (selectedPackingTypeId == @(((int)PackingType.PackByDimensions).ToString())) {
            $('#pnlPassDimensions').show();
            $('#pnlPackingPackageVolume').hide();
        }
        else if (selectedPackingTypeId == @(((int)PackingType.PackByOneItemPerPackage).ToString())) {
            $('#pnlPassDimensions').hide();
            $('#pnlPackingPackageVolume').hide();
        }
        else if (selectedPackingTypeId == @(((int)PackingType.PackByVolume).ToString())) {
            $('#pnlPassDimensions').hide();
            $('#pnlPackingPackageVolume').show();
        }
    }
    </script>
    <div class="form-horizontal">
        <div class="form-body">
            <div class="form-group">
                <div class="col-md-3 col-sm-3 text-right">
                    @Html.GrandLabelFor(model => model.Url, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.Url)
                    @Html.ValidationMessageFor(model => model.Url)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 col-sm-3 text-right">
                    @Html.GrandLabelFor(model => model.Key, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.Key)
                    @Html.ValidationMessageFor(model => model.Key)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 col-sm-3 text-right">
                    @Html.GrandLabelFor(model => model.Password, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.Password)
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 col-sm-3 text-right">
                    @Html.GrandLabelFor(model => model.AccountNumber, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.AccountNumber)
                    @Html.ValidationMessageFor(model => model.AccountNumber)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 col-sm-3 text-right">
                    @Html.GrandLabelFor(model => model.MeterNumber, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.MeterNumber)
                    @Html.ValidationMessageFor(model => model.MeterNumber)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 col-sm-3 text-right">
                    @Html.GrandLabelFor(model => model.AvailableDropOffTypes, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.DropDownList("DropoffType", Model.AvailableDropOffTypes, new { @class = "control-label" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 col-sm-3 text-right">
                    @Html.GrandLabelFor(model => model.UseResidentialRates, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.UseResidentialRates)
                    @Html.ValidationMessageFor(model => model.UseResidentialRates)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 col-sm-3 text-right">
                    @Html.GrandLabelFor(model => model.ApplyDiscounts, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.ApplyDiscounts)
                    @Html.ValidationMessageFor(model => model.ApplyDiscounts)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 col-sm-3 text-right">
                    @Html.GrandLabelFor(model => model.AdditionalHandlingCharge, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.AdditionalHandlingCharge)
                    @Html.ValidationMessageFor(model => model.AdditionalHandlingCharge)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 col-sm-3 text-right">
                    @Html.GrandLabelFor(model => model.AvailableCarrierServices, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    <div style="height: 250px; width: 300px; overflow: auto; border: solid 1px #bbb;">
                        @foreach (var csd in Model.AvailableCarrierServices)
                        {
                            <input type="checkbox" name="CheckedCarrierServices" value="@(csd)" checked="@Model.CarrierServicesOffered.Contains(csd)" />
                            <label>@csd</label>
                            <br />
                        }
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3 col-sm-3 text-right">
                    @Html.GrandLabelFor(model => model.PackingTypeValues, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.DropDownList("PackingType", Model.PackingTypeValues, new { @class = "control-label" })
                </div>
            </div>
            <div class="form-group" id="pnlPassDimensions">
                <div class="col-md-3 col-sm-3 text-right">
                    @Html.GrandLabelFor(model => model.PassDimensions, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.PassDimensions)
                    @Html.ValidationMessageFor(model => model.PassDimensions)
                </div>
            </div>
            <div class="form-group" id="pnlPackingPackageVolume">
                <div class="col-md-3 col-sm-3 text-right">
                    @Html.GrandLabelFor(model => model.PackingPackageVolume, new Dictionary<string, object> { { "class", "control-label" } }, false)
                </div>
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.PackingPackageVolume)
                    @Html.ValidationMessageFor(model => model.PackingPackageVolume)
                </div>
            </div>
        </div>
        <div class="form-actions">
            <div class="row">
                <div class="col-md-offset-3 col-sm-offset-3 col-md-9 col-sm-9">
                    <input type="submit" name="save" class="btn green" value="@T("Admin.Common.Save")" />
                </div>
            </div>
        </div>
    </div>
}